generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model User {
  id           String        @id @unique @default(uuid())
  email        String        @unique
  password     String
  type         String
  created_at   DateTime      @default(now())
  update_at    DateTime      @updatedAt
  user_account UserAccount[] @relation("user")

  @@map("users")
}

model UserAccount {
  id_user   String
  id_logist String
  logist    Logist @relation("logist", fields: [id_logist], references: [id])
  user      User   @relation("user", fields: [id_user], references: [id])

  @@id([id_user, id_logist])
  @@map("users_accounts")
}

model Logist {
  id           String         @id @unique @default(uuid())
  code         String         @unique @default(uuid())
  user_account UserAccount[]  @relation("logist")
  stores       LogistStores[] @relation("logists")
  created_at   DateTime       @default(now())
  update_at    DateTime       @updatedAt

  @@map("logists")
}

model LogistStores {
  store_id   String
  logist_id  String
  logist     Logist?   @relation("logists", fields: [logist_id], references: [code])
  user       Stores   @relation("stores", fields: [store_id], references: [id])

  @@id([logist_id,store_id])
  @@map("logist_stores")
}

model Stores {
  id          String         @id @unique @default(uuid())
  store_name  String        
  cnpj        String         @unique
  store_type  String
  address     String?
  link        String?
  logistStore LogistStores[] @relation("stores")
  invetory    StoreStock[]   @relation("store")

  created_at  DateTime @default(now())
  update_at   DateTime @updatedAt

  @@map("stores")
}

model StoreStock {
  store_id    String
  product     BigInt?   
  store       Stores    @relation("store", fields: [store_id], references: [id])
  @@id([store_id])
  @@map("store_stocks")
}

model Category {
  id      BigInt    @id @default(autoincrement())
  type    String    @unique(map: "uk_c2491gxyu6bsjw346i1fgojqf") @db.VarChar(50)
  product Product[]

  @@map("category")
}

model Product {
  id          BigInt      @id @unique @default(autoincrement())
  available   Boolean?
  created_at  DateTime?   @db.Timestamp(6)
  image       String      @db.VarChar(255)
  logist_code String      @db.VarChar(255)
  model       String      @db.VarChar(50)
  price       Float
  size        Bytes
  update_at   DateTime?   @db.Timestamp(6)
  category_id BigInt?
  category    Category?   @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk1mtsbur82frn64de7balymq9s")

  @@map("product")
}
