// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}


model User {
  id               String          @id @unique @default(uuid())
  email            String          @unique
  password         String     
  type             String
  created_at       DateTime        @default(now())
  update_at        DateTime        @updatedAt     
  user_account     UserAccount[]   @relation("user")
  @@map("users")
}



model UserAccount {
  @@id([id_user,id_logist])

  user        User       @relation("user",fields: [id_user],references: [id])
  id_user     String
  logist      Logist     @relation("logist",fields: [id_logist],references: [id])
  id_logist   String

  @@map("users_accounts")
}


model Logist {
  id                String          @id @unique @default(uuid())
  store_name        String          @unique
  cnpj              String          @unique
  phone             Int   
  user_account      UserAccount[]   @relation("logist")
  store_type        String       
  address           String?       
  link              String?
  code              String          @unique @default(uuid())

  @@map("logists")   
}

model category {
  id      BigInt    @id @default(autoincrement())
  type    String    @unique(map: "uk_c2491gxyu6bsjw346i1fgojqf") @db.VarChar(50)
  product product[]
}

model product {
  id          BigInt    @id @default(autoincrement())
  created_at  DateTime? @db.Timestamp(6)
  image       String    @db.VarChar(255)
  logist_code String    @db.VarChar(255)
  model       String    @db.VarChar(50)
  price       Float
  size        Bytes
  update_at   DateTime? @db.Timestamp(6)
  category_id BigInt?
  category    category? @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk1mtsbur82frn64de7balymq9s")
}
